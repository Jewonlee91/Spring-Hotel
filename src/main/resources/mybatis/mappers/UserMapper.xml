<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sh.mapper.UserMapper">

	<resultMap type="User" id="UserResultMap">
		<id column="user_id" property="id"/>
		<result column="user_no" property="no"/>
		<result column="user_password" property="password"/>
		<result column="user_name" property="name"/>
		<result column="user_email" property="email"/>
		<result column="user_tel" property="tel"/>
		<result column="user_postcode" property="postcode"/>
		<result column="user_address" property="totalAddress"/>
		<result column="user_deleted" property="deleted"/>
		<result column="user_deleted_date" property="deletedDate"/>
		<result column="user_created_date" property="createdDate"/>
		<result column="user_updated_date" property="updatedDate"/>
		<result column="user_point" property="point"/>
		<result column="user_annual_stay" property="stay"/>
	</resultMap>
	
	<!-- User getUserById(String id); -->
		<select id="getUserById" parameterType="string" resultMap="UserResultMap">
			select *
			from sh_users
			where user_id = #{value}
		</select>
		
	<!-- User getUserByEmail(String email); -->
	<select id="getUserByEmail" parameterType="string" resultMap="UserResultMap">
		select *
		from sh_users
		where user_email = #{value}
	</select>
	
	<!-- User getUserByNo(int no); -->
	<select id="getUserByNo" parameterType="int" resultMap="UserResultMap">
		select *
		from sh_users
		where user_no = #{value}
	</select>
	
	<!-- int idCheck(String id); -->
	<select id="idCheck" parameterType="String" resultType="int">
		select count(user_id)
		from sh_users
		where user_id = #{id}
	</select>
	
	<!-- int emailCheck(String email); -->
	<select id="emailCheck"  parameterType="string" resultType="int">
		select count(user_email)
		from sh_users
		where user_email = #{email}
	</select>
	
	<!-- void insertUser(User user); -->
		<insert id="insertUser" parameterType="User">
		insert into sh_users
		(user_no, user_id, user_password, user_name, user_email, user_tel, user_address, postcode , first_name, last_name, birthday)
		values
		(user_seq.nextval, #{id}, #{password}, #{name}, #{email}, #{tel}, #{totalAddress}, #{postcode}, #{firstName}, #{lastName}, #{birthDay})
		</insert>
		
	<!-- void updateUser(User user); -->
	<update id="updateUser" parameterType="User">
		update sh_users
		set 
			user_password = #{password},
			user_name = #{name},
			user_tel = #{tel},
			user_email = #{email},
			user_address = #{totalAddress},
			postcode = #{postcode},
			first_name = #{firstName},
			last_name = #{lastName},
			birthday = #{birthDay},
			user_updated_date = sysdate
		where user_id = #{id}
	</update>
	
	<!-- String fineId(@Param("name") String name, @Param("email")String email); 
		 mapper 인터페이스에서 parameter 설정 parameterType 설정을 하지 않아도 된다.
	-->
	<select id="fineId" resultType="string">
		select user_id
		from sh_users
		where user_name = #{name} 
		and user_email = #{email}
	</select>
	
	<!-- String finePw(@Param("id") String id, @Param("email")String email); -->
	<select id="finePw" resultType="string">
		select user_password
		from sh_users
		where user_id = #{id} 
		and user_email = #{email}
	</select>
</mapper>