<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sh.mapper.InquiryMapper">
	<!-- void insertInquiry(Qna qna); -->
	<insert id="insertInquiry" parameterType="Qna">
		insert into sh_qna
		(qna_no, qna_title, qna_content, user_no, qna_author, qna_category_no, location_no)
		values
		(qna_seq.nextval, #{title}, #{content}, #{userNo}, #{qnaAuthor},#{qnaCategoryNo}, #{locationNo})
	</insert>
	
	<resultMap type="Qna" id="inquiryResultMap">
		<id column="qna_no" property="no"/>
		<result column="qna_title" property="title"/>
		<result column="qna_content" property="content"/>
		<result column="qna_answer_state" property="answerState"/>
		<result column="qna_answer_content" property="answerContent"/>
		<result column="qna_answer_created_date" property="answerCreatedDate"/>
		<result column="qna_answer_created_date" property="answerUpdatedDate"/>
		<result column="qna_created_date" property="createdDate"/>
		<result column="qna_created_date" property="updatedDate"/>
		<result column="qna_author" property="qnaAuthor"/>
		<association property="user" column="user_no" select="com.sh.mapper.UserMapper.getUserByNo"></association>
		<association property="qnaCategory" column="qna_category_no" select="com.sh.mapper.InquiryMapper.getQnaCategoryByNo"></association>
		<association property="location" column="location_no" select="getLocationByNo"></association>
	</resultMap>
	
	<!-- int getQnaTotalRows(); -->
	<select id="getQnaTotalRows" resultType="int" >
		select count(*)
		from sh_qna
		where qna_deleted ='N'
	</select>
	
	<!-- int getQnaTotalRowsByUserNo(int no); -->
	<select id="getQnaTotalRowsByUserNo" parameterType="int" resultType="int" >
		select count(*)
		from sh_qna
		where qna_deleted ='N'
		and user_no = #{no}
	</select>
	
	<!-- int getQnaTotalRowsByFilter(QnaCriteria qnaCriteria); -->
	<select id="getQnaTotalRowsByFilter" parameterType="QnaCriteria" resultType="int">
		select count(*)
		from sh_qna
		<where> qna_deleted ='N'
			<if test='userNo != null'>
			    and user_no = #{userNo}
			</if>
			<if test='search == "name"'>
				and user_no in (select user_no
		                    from sh_users
		                    where user_name like '%'||#{keyword}||'%')
			</if>
			<if test='search != "name"'>
				and (qna_title like '%'||#{keyword}||'%' or qna_content like '%'||#{keyword}||'%')
			</if>
			<choose>
				<when test='state == "Y"'>
					and qna_answer_state = #{state}
				</when>
				<when test='state == "N"'>
					and qna_answer_state = #{state}
				</when>
			</choose>
		</where>
	</select>
	
	<!-- List<Qna> getAllInquiry(); -->
	 <select id="getAllInquiry"  parameterType="Pagination" resultMap="inquiryResultMap">
		select *
		from (SELECT Q.*,
      		  ROW_NUMBER() OVER (ORDER BY QNA_NO DESC) ROW_NUMBER
			  FROM SH_QNA Q
			  WHERE QNA_DELETED = 'N')	
		where ROW_NUMBER &gt;= #{beginIndex} and ROW_NUMBER &lt;=#{endIndex}
	</select>
	
	<!-- List<Qna> getAllInquiryByUserNo(@Param("pagination") Pagination pagination, @Param("userNo")int userNo) -->
	 <select id="getAllInquiryByUserNo" resultMap="inquiryResultMap">
		select *
		from (SELECT Q.*,
      		  ROW_NUMBER() OVER (ORDER BY QNA_NO DESC) ROW_NUMBER
			  FROM SH_QNA Q
			  WHERE QNA_DELETED = 'N'
			  AND USER_NO = #{userNo})	
		where ROW_NUMBER &gt;= #{beginIndex} and ROW_NUMBER &lt;=#{endIndex}
	</select>
	
	<!-- List<Qna> getInquiryByCriteria(QnaCriteria qnaCriteria); -->
	 <select id="getInquiryByCriteria" parameterType="QnaCriteria" resultMap="inquiryResultMap">
		select *
		from (SELECT Q.*,
      		  ROW_NUMBER() OVER (ORDER BY QNA_NO DESC) ROW_NUMBER
			  FROM SH_QNA Q
			<where> QNA_DELETED = 'N'
				<if test='userNo != null'>
			        and user_no = #{userNo}
				</if>
				<if test='search == "name"'>
					and user_no in (select user_no
			                    from sh_users
			                    where user_name like '%'||#{keyword}||'%')
				</if>
				<if test='search != "name"'>
					and (qna_title like '%'||#{keyword}||'%' or qna_content like '%'||#{keyword}||'%')
				</if>
				<choose>
					<when test='state == "Y"'>
						and qna_answer_state = #{state}
					</when>
					<when test='state == "N"'>
						and qna_answer_state = #{state}
					</when>
				</choose>
			</where>)
			<where>
			 ROW_NUMBER &gt;= #{pagination.beginIndex} and ROW_NUMBER &lt;=#{pagination.endIndex}
			</where>
	</select>
	
	<!-- Qna getInquiryByNo(int no); -->
	<select id="getInquiryByNo" parameterType="int" resultMap="inquiryResultMap">
		select *
		from sh_qna
		where qna_no = #{value}
	</select>
	
	<!-- QnaCategory getQnaCategoryByNo(int no); -->
	<select id="getQnaCategoryByNo" parameterType="int" resultType="QnaCategory">
		select 
			qna_category_no as no,
			qna_category_name as name,
			category_no as "category.no",
			qna_group_no as groupNo
		from sh_qna_category	
		where qna_category_no = #{value}	
	</select> 
	
	<!-- void updateInquiry(Qna qna); -->
	<update id="updateInquiry" parameterType="Qna">
		update sh_qna
		set
			qna_title = #{title},
			qna_content = #{content},
			qna_updated_date = sysdate
		where qna_no = #{no}
	</update>
	
	<!-- void updateAnswer(Qna qna); -->
	<update id="updateAnswer" parameterType="Qna">
		update sh_qna
		set
			qna_answer_content = #{answerContent},
			qna_answer_state = #{answerState},
			qna_answer_created_date = sysdate,
			qna_answer_updated_date = #{answerUpdatedDate}
		where qna_no = #{no}
	</update>
	
	<!-- void deleteInquiry(Qna qna ); -->
	<update id="deleteInquiry" parameterType="Qna">
		update sh_qna 
		set 
			qna_deleted = 'Y'
		where qna_no = #{no}
	</update>
	
	<!-- List<QnaCategory> getAllQnaCategory(); -->
	<select id="getAllQnaCategory" resultType="QnaCategory"> 
		select 
			qna_category_no as no,
			qna_category_name as name,
			category_no as "category.no",
			qna_group_no as groupNo
		from sh_qna_category	
	</select>
	
	<!-- List<Location> getAllLocation(); -->
	<select id="getAllLocation" resultType="Location">
		select 
			location_no as no,
			location_name as name
		from sh_location
		order by location_no asc
	</select>
	
	<!-- Location getLocationByNo; -->
    <select id="getLocationByNo" parameterType="int" resultType="Location">
		select 
			location_no as no,
			location_name as name
		from sh_location
		where location_no = #{no}
	</select>
</mapper>